******You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

Return the merged string.******

Answer : 

class Solution {
public:
    string mergeAlternately(string word1, string word2) {
        string s;
 int m = word1.size();
        int n = word2.size();
        for(int i=0 ;i<m && i<n ;i++){
            
                s= s+ word1[i] + word2[i];
            
        }
        if(m > n){
           
            s= s+ word1.substr(n);
        }
        if(m < n){
           
            s= s+ word2.substr(m);
        }
        
        return s;
        // if(word1.length> word2.le)
    }
};

// Find Leap Year in cpp..............................................***********.......................

// C++ program to check if a given
// year is a leap year or not
#include <iostream>
using namespace std;

// Function to check leap year
bool checkYear(int year)
{
	if (year % 400 == 0) {
		return true;
	}

	// not a leap year if divisible by 100
	// but not divisible by 400
	else if (year % 100 == 0) {
		return false;
	}

	// leap year if not divisible by 100
	// but divisible by 4
	else if (year % 4 == 0) {
		return true;
	}

	// all other years are not leap years
	else {
		return false;
	}
}

// Driver code
int main()
{
	int year = 2000;

	checkYear(year) ? cout << "Leap Year"
					: cout << "Not a Leap Year";

	return 0;
}



//************************************************************************STAR PRINTING**************************************************


// C++ program to print inverted triangle pattern using
// while loop
#include <iostream>
using namespace std;

// function to print pattern
void printInvTriangle(int n)
{

	// loop variables
	int i = 0;
	int j;

	// outer loop to iterate through each row
	while (i < n) {

		// leading space counter
		int space = i;
		j = 0;

		// inner loop to print pattern in each row
		while (j < 2 * n - i - 1) {

			// condition to check weather to print star * or
			// whitespace
			if (space) {
				cout << " ";
				space--;
			}
			else {
				cout << "* ";
			}
			j++;
		}
		cout << endl;
		i++;
	}
}

// driver code
int main()
{
	printInvTriangle(5);

	return 0;
}

//********************************************************************************Print table ***********************************************

// C++ program to print table
// of a number
#include <iostream>
using namespace std;

// Driver code
int main()
{
	// Change here to change output
	int n = 5;
	for (int i = 1; i <= 10; ++i)
		cout << n << " * " << i << " = " << n * i << endl;
	return 0;
}

 
